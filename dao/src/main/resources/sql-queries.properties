category.insertFileCategories=insert \
                              into file_category \
                              values (:categoryId, :fileId)
userDetails.selectUserDetailsByLogin=SELECT user.id, user.user_name, user.user_password, role.role \
                                     from user \
                                     inner join user_role \
                                     on user.id = user_role.user_id \
                                     inner join role \
                                     on user_role.role_id = role.id \
                                     where user_name = :user_name
category.existsByUserIdAndCategoryId=SELECT \
                                     COUNT(*) \
                                     FROM user_has_category \
                                     WHERE user_has_category.user_id = :user_id \
                                     AND user_has_category.category_id in (:category_id)
folder.selectByUserIdAndParentId=SELECT folder.id, folder.name \
                                 from sample_file_exchanger.folder \
                                 where folder.parent_id = :parent_id and folder.user_id = :user_id
file.selectByUserIdAndFolderId=SELECT file.id, file.folder_id, file.real_name \
                               FROM sample_file_exchanger.file \
                               where file.folder_id = :folder_id and file.user_id = :user_id
user.selectByLimitAndOffset=select * \
                            from sample_file_exchanger.user \
                            limit :limit offset :offset
file.selectByLimitAndOffset=SELECT * \
                            FROM sample_file_exchanger.file \
                            LIMIT :limit OFFSET :offset
user.selectUsersCount=select \
                      count(*) \
                      from sample_file_exchanger.user
file.selectFilesCount=select \
                      count(*) \
                      from sample_file_exchanger.file
user.delete=delete \
            from sample_file_exchanger.user \
            where id = :id
file.delete=delete \
            from sample_file_exchanger.file \
            where id = :id
user.update=update sample_file_exchanger.user \
            set user_password = :user_password, user_gender = :user_gender, user_birth_date = :user_birth_date, user_information = :user_information \
            where id = :id
file.update=update sample_file_exchanger.file \
            set description = :description, real_name = :real_name, date = :date \
            where id = :id
userRole.insertRole=insert \
                    into sample_file_exchanger.user_role (user_id, role_id) \
                    values (:user_id, :role_id)
user.insert=insert \
            into sample_file_exchanger.user (user_name, user_password, user_gender, user_birth_date, user_information) \
            values (:user_name, :user_password, :user_gender, :user_birth_date, :user_information)
user.checkUserByLogin=select \
                      count(*) \
                      from sample_file_exchanger.user \
                      where user_name = ?
file.insert=insert \
            into sample_file_exchanger.file (user_id, date, description, folder_id, real_name, encode_name) \
            values (:user_id, :date, :description, :folder_id, :real_name, :encode_name)
folder.insert=insert \
              into sample_file_exchanger.folder(name, user_id, parent_id) \
              values(:name, :user_id, :parent_id)
folder.existsByUserId=select count(*) from sample_file_exchanger.folder where user_id = :user_id and id = :id
category.getCategoriesByUserId=SELECT id, category \
                               FROM sample_file_exchanger.user_has_category \
                               inner join sample_file_exchanger.category \
                               on sample_file_exchanger.user_has_category.category_id = sample_file_exchanger.category.id \
                               where sample_file_exchanger.user_has_category.user_id = :user_id
folder.deleteByUserIdAndFolderId=DELETE \
                                 FROM sample_file_exchanger.folder \
                                 WHERE sample_file_exchanger.folder.user_id = :user_id \
                                 AND sample_file_exchanger.folder.id = :id
file.getFileNameByFileId=SELECT sample_file_exchanger.file.encode_name \
                                  FROM sample_file_exchanger.file \
                                  WHERE sample_file_exchanger.file.id = :id
file.getFileNamesByFolderIdAndUserId=SELECT encode_name \
                                      FROM sample_file_exchanger.file \
                                      INNER JOIN \
                                      (SELECT id \
                                      FROM \
                                      (SELECT id, parent_id \
                                      FROM sample_file_exchanger.folder \
                                      WHERE user_id = :user_id \
                                      ORDER BY parent_id, id) PRODUCTS_SORTED, \
                                      (SELECT @pv := :id) INITIALISATION \
                                      WHERE FIND_IN_SET(parent_id, @pv) \
                                      AND LENGTH(@pv := CONCAT(@pv, ',', id)) \
                                      OR id = :id) AS folder_table \
                                      ON file.folder_id = folder_table.id
folder.updateFolderNameByFolderIdAndUserId=UPDATE sample_file_exchanger.folder \
                                           SET name = :name \
                                           WHERE id = :id \
                                           AND user_id = :user_id
file.getFileByFileIdAndUserId=SELECT id, date, description, real_name \
                              FROM sample_file_exchanger.file \
                              WHERE id = :id \
                              AND user_id = :user_id
file.fetFileNamesByUserId=SELECT encode_name \
                          FROM sample_file_exchanger.file \
                          WHERE user_id = :user_id


